# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet vbase3js "Javascript SFC Vue3 Snippet" b
<template>
	${2}
</template>

<script setup>
	${1}
</script>

<style scoped>

</style>
endsnippet

snippet vbase3 "Typescript SFC Vue3 Snippet" b
<template>
	${2}
</template>

<script setup lang="ts">
	${1}
</script>

<style scoped>

</style>
endsnippet


snippet imp "Import a component or library" b
import { $2 } from '$1' 
endsnippet

snippet impd "Import (DEFAULT) a component or library" b
import $1 from '$2' 
endsnippet


snippet v3_setup "Create Vue 3 composition API component" b
import { defineComponent } from 'vue'

export default defineComponent({
	name: '$1',

	components: {
	},

	setup(props) {
		$2
	},
})
endsnippet
